// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/javascript-node
{
  "name": "AnythingLLM Development",
  // Use Node.js 22 (latest LTS) optimized for yarn 4.9.2 and Corepack
  "image": "mcr.microsoft.com/devcontainers/javascript-node:1-22-bookworm",

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": "true"
    },
    // Docker very useful linter
    "ghcr.io/dhoeric/features/hadolint:1": {
      "version": "latest"
    },
    // GitHub CLI
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    },
    // Git support
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    }
  },

  // Container environment variables for development
  "containerEnv": {
    "NODE_ENV": "development",
    "COREPACK_ENABLE_STRICT": "0",
    "YARN_ENABLE_TELEMETRY": "0",
    "PATH": "${containerEnv:PATH}:/home/vscode/.npm-global/bin"
  },

  // Setup commands for GitHub Codespaces
  "onCreateCommand": [
    "bash",
    "-c",
    "corepack enable && corepack prepare yarn@4.9.2 --activate && npm install -g @railway/cli@latest && echo 'Development environment ready: Yarn 4.9.2 + Railway CLI'"
  ],

  "updateContentCommand": [
    "bash",
    "-c",
    "yarn install && cd server && yarn install && cd ../collector && yarn install && cd ../frontend && yarn install && cd .. && yarn setup:envs && yarn prisma:setup && echo 'Setup complete! Available commands:' && echo '  yarn dev:all - Start all services' && echo '  railway login - Login to Railway' && echo '  railway deploy - Deploy to Railway'"
  ],

  // VS Code customizations
  "customizations": {
    "vscode": {
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash"
          }
        },
        "typescript.preferences.includePackageJsonAutoImports": "on",
        "eslint.workingDirectories": ["frontend", "server", "collector"],
        "prettier.configPath": "./.prettierrc",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit"
        },
        "files.associations": {
          "*.env.example": "properties",
          "*.env.development": "properties",
          "*.env.production": "properties"
        }
      },
      "extensions": [
        "ms-vscode.vscode-typescript-next",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-eslint",
        "bradlc.vscode-tailwindcss",
        "ms-vscode.vscode-json",
        "Prisma.prisma",
        "ms-vscode.vscode-docker",
        "github.vscode-github-actions",
        "ms-playwright.playwright",
        "ms-vscode.vscode-thunder-client",
        "ms-vscode.vscode-yaml",
        "christian-kohler.path-intellisense",
        "ms-vscode.vscode-todo-highlight",
        "aaron-bond.better-comments"
      ]
    }
  },

  // Port configuration for GitHub Codespaces
  "portsAttributes": {
    "3001": {
      "label": "AnythingLLM Server",
      "onAutoForward": "notify",
      "protocol": "http"
    },
    "3000": {
      "label": "Frontend (Vite)",
      "onAutoForward": "notify",
      "protocol": "http"
    },
    "8288": {
      "label": "Collector Service",
      "onAutoForward": "ignore"
    },
    "5432": {
      "label": "PostgreSQL Database",
      "onAutoForward": "ignore"
    }
  },

  // Forward common development ports
  "forwardPorts": [3000, 3001, 8288],

  // Post-attach commands for Codespaces
  "postAttachCommand": {
    "setup-workspace": "echo 'AnythingLLM Development Environment Ready!' && echo 'Available commands:' && echo '  yarn dev:all - Start all services' && echo '  yarn dev:server - Start backend only' && echo '  yarn dev:frontend - Start frontend only' && echo '  yarn dev:collector - Start collector only'"
  }
}
