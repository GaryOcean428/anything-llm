# syntax=docker/dockerfile:1.6
# Railway AnythingLLM Dockerfile - Alternative without cache mounts for compatibility
# Production-safe build: disable install scripts (husky/prepare) during image build
FROM node:20-slim AS base

# Install Python 3.11 and build dependencies (Debian Bookworm default)
RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3-pip \
    make \
    g++ \
    build-essential \
    git && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy package files
COPY frontend/package.json ./frontend/
COPY server/package.json ./server/

# Copy all source files
COPY . .

# Enable Corepack and install only what's needed to build the frontend
WORKDIR /app
ENV HUSKY=0 \
    YARN_NODE_LINKER=pnp \
    YARN_ENABLE_GLOBAL_CACHE=1
RUN corepack enable && corepack prepare yarn@stable --activate
RUN yarn --version
# Focus install for the frontend workspace (include devDeps for build) - no cache mounts
RUN yarn workspaces focus luffy-frontend --all --immutable --inline-builds

# Build frontend from repo root using workspace
WORKDIR /app
RUN yarn -T workspace luffy-frontend run build

# Setup production server
WORKDIR /app
RUN cp -R frontend/dist server/public

WORKDIR /app/server
# Install server production deps with npm (scripts disabled)
ENV npm_config_ignore_scripts=true
RUN npm run install:production

# Set environment
ARG PORT=3001
ENV NODE_ENV=production
ENV NODE_OPTIONS=--max-old-space-size=4096

EXPOSE ${PORT}

# Start server with database migration
CMD ["npm", "run", "start:migrate"]